
export function runTest({testCases = [], testName = ''}) {
  renderTestSummary(genTestSummary(runTestCases(testCases), testName));
}

function runTestCases(testCases) {
  const results = testCases.map(tc => {
    const result = {
      name: tc.name,
      got: tc.got,
      want: tc.want,
    }
    const comparisonFunc = tc.comparisonFunc || ((got, want) => {
      return got === want;
    });
    result.isSuccessful = comparisonFunc(tc.got, tc.want);
    return result;
  });
  return results
}

function genTestSummary(testResults, testName) {
  const failedResults = testResults.filter(res => {
    return !res.isSuccessful;
  });
  const failureReports = failedResults.map(res => {
    return {
      name: res.name,
      got: res.got,
      want: res.want,
    }
  });
  const summary = {
    numTotal: testResults.length,
    numFailures: failedResults.length,
    numSuccesses: testResults.length - failedResults.length,
    failureReports: failureReports,
    testName: testName,
  };
  return summary;
}

function renderTestSummary(testSummary) {
  if (!testSummary.numFailures) {
    const header = `${testSummary.numSuccesses} out of ${testSummary.numTotal} passed.`;
    console.log('✅', testSummary.testName)
    console.log(header);
    return;
  }
  const header = `${testSummary.numFailures} out of ${testSummary.numTotal} failed.`;
  console.log('❌', testSummary.testName)
  console.log(header);
  testSummary.failureReports.forEach(report => {
    console.log(' ❌', report.name);
    console.log('  got:');
    JSON.stringify(report.got, null, 2).split('\n').forEach(line => {
      console.log('    ', line);
    });
    console.log('  want:');
    JSON.stringify(report.want, null, 2).split('\n').forEach(line => {
      console.log('    ', line);
    });
  });
}